{"filter":false,"title":"product_controller.rb","tooltip":"/app/controllers/admin/product_controller.rb","undoManager":{"mark":0,"position":0,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":48}},"text":"class ProductsController < ApplicationController"},{"action":"insertText","range":{"start":{"row":0,"column":48},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":74,"column":0}},"lines":["  before_action :set_product, only: [:show, :edit, :update, :destroy]","","  # GET /products","  # GET /products.json","  def index","    @products = Product.all","  end","","  # GET /products/1","  # GET /products/1.json","  def show","  end","","  # GET /products/new","  def new","    @product = Product.new","  end","","  # GET /products/1/edit","  def edit","  end","","  # POST /products","  # POST /products.json","  def create","    @product = Product.new(product_params)","","    respond_to do |format|","      if @product.save","        format.html { redirect_to @product, notice: 'Product was successfully created.' }","        format.json { render :show, status: :created, location: @product }","      else","        format.html { render :new }","        format.json { render json: @product.errors, status: :unprocessable_entity }","      end","    end","  end","","  # PATCH/PUT /products/1","  # PATCH/PUT /products/1.json","  def update","    respond_to do |format|","      if @product.update(product_params)","        format.html { redirect_to @product, notice: 'Product was successfully updated.' }","        format.json { render :show, status: :ok, location: @product }","      else","        format.html { render :edit }","        format.json { render json: @product.errors, status: :unprocessable_entity }","      end","    end","  end","","  # DELETE /products/1","  # DELETE /products/1.json","  def destroy","    @product.destroy","    respond_to do |format|","      format.html { redirect_to products_url, notice: 'Product was successfully destroyed.' }","      format.json { head :no_content }","    end","  end","","  private","    # Use callbacks to share common setup or constraints between actions.","    def set_product","      @product = Product.find(params[:id])","    end","","    # Never trust parameters from the scary internet, only allow the white list through.","    def product_params","      params.require(:product).permit(:name, :description, :extension, :stock, :price)","    end","end"]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":6},"end":{"row":0,"column":6},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1412781696987,"hash":"a5436c4f2ae3f1404331e167947f1e887d1cb08a"}